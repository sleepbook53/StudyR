plot(평균급여)
plot(직업명)
직업명fa=as.factor(직업명)
직업명
직업명fa
직업명fa=as.factor(직업명)
summary(직업명fa)
plot(직업명fa)
data
data=data.frame('직업명', '채용수', 평균급여', '직업만족도')
str(data)
data
data=data.frame('직업명', '채용수', '평균급여', '직업만족도')
str(data)
plot(a) #에러
tmp[[1]]
a='ptyhon/r/cobol/r'
tmp=strsplit(a,"/")
tmp[[1]]
plot(a) #에러
plot(a) #에러
tmp[[1]][2]
plot(a) #에러
a=c('ptyhon/r/cobol/r', aa/b/b/c')
tmp=strsplit(a,"/")
tmp[[1]][2]
plot(a) #에러
plot(a) #에러
tmp[[2]]
unlist(tmp)
summary(tmp)
unlist(tmp)
plot(a) #에러
plot(a) #에러
///
3=4
fidmsgsg
fisth
q()
q()
q()
q()
dd
unlist(tmp)
plot(a) #에러
summary(tmp)
tmp=strsplit(a,"/")
a=c('파이썬-20' 데이터분석가-20, 인공지능', 'R, 데이터분석가, '빅데이터'
a=c('파이썬-20' 데이터분석가-20, 인공지능', 'R, 데이터분석가, '빅데이터')
a=c('파이썬-20, 데이터분석가-20, 인공지능', 'R, 데이터분석가, 빅데이터')
tmp=strsplit(a,"/")
tmp
summary(tmp)
summary(tmp)
summary(tmp)
tep2 = as.factor(tmp1)
tmp2
tmp1
tmp
tmp2 = as.factor(tmp)
summary(tmp)
tmp1=unlist(tmp)
tmp1
summary(tmp)
summary(tmp2)
summary(tmp2)
tmp2 = as.factor(tmp1) #facotr화
tmp2
summary(tmp2)
plot(tmp2)
strsplit(tmp2,'-'), #Facotr는 strsplit안됨
strsplit(as.character(tmp),'-')
cafe
cafe <- list(espresso = c(4, 5, 3, 6, 5, 4, 7), #판매개수
americano = c(63, 68, 64, 68, 72, 89, 94),
latte = c(61, 70, 59, 71, 71, 92, 88),
price = c(2.0, 2.5, 3.0),
menu = c('espresso', 'americno', latte'))
cafe
cafe
cafe
str(cafe)
cafe <-  list(espresso = c(4, 5, 3, 6, 5, 4, 7),
americano = c(63, 68, 64, 68, 72, 89, 94),
latte = c(61, 70, 59, 71, 71, 92, 88),
price = c(2.0, 2.5, 3.0),
menu = c('espresso', 'americno', latte'))
cafe
cafe = list(espresso,americano, latte, price, menu)
cafe
cafe = list(espresso,americano, latte, price, menu)
espresso = c(4, 5, 3, 6, 5, 4, 7)
americano = c(63, 68, 64, 68, 72, 89, 94)
latte = c(61, 70, 59, 71, 71, 92, 88)
price = c(2.0, 2.5, 3.0)
menu = c('espresso', 'americno', latte')
cafe = list(espresso,americano, latte, price, menu)
str(cafe)
cafe
cafe <- list(espresso = c(4, 5, 3, 6, 5, 4, 7),
cafe
menu = c('espresso', 'americno', latte'))
str(cafe)
cafe
cafe
cafe
cafe <- list (espresso = c(4, 5, 3, 6, 5, 4, 7),
americano = c(63, 68, 64, 68, 72, 89, 94),
latte = c(61, 70, 59, 71, 71, 92, 88),
latte = c(61, 70, 59, 71, 71, 92, 88),
price = c(2.0, 2.5, 3.0),
menu = c('espresso', 'americno', latte'))
mtcars
str(mtcars)
mtcars[:5]
head(mtcar)
head(mtcars)
head(mtcars,3) #위에서 n개까지 보자
summary(mtcars)
plot(mtecars$vs)
plot(mtcars$vs)
plot(mtcars$vs)
plot(mtcars$vs)
plot(mtcars$mpg)
mecars
mtcars
summary(mecars$syl)#실린더 개수 확인
summary(mtcars$syl)#실린더 개수 확인
summary(mtcars$cyl)#실린더 개수 확인
summary(factor.mtcars$cyl)#실린더 개수 확인 #그룹으로서의 의미를 가지려면: factor
summary(factor(mtcars$cyl))#실린더 개수 확인 #그룹으로서의 의미를 가지려면: factor
name(summary(factor(mtcars$cyl))
names(summary(factor(mtcars$cyl))
names(summary(factor(mtcars$cyl)))
leves(facotr(mtcars$cyl))
levels(facotr(mtcars$cyl))
levels(factor(mtcars$cyl))
unique(mtcars$cyl)
cafe
cafe <- list (espresso = c(4, 5, 3, 6, 5, 4, 7),
tmp-summary(factor(mtcar&cyl)
tmp
tmp
tmp
tmp
str(tmp)
str(tmp)
tmp[1]
tmp[1]
tmp= split(mtcars, mtcars$cyl)
str(tmp)
tmp[1]
tmp
names(tmp)=c('cyl:4', 'cyl :6', 'cyl :8')
str(tmp)
tmp[1]
tmp[[1]]
tmp= split(mtcars, mtcars$cyl)
str(tmp)
tmp[[1]]
split(tmp[[1]], tmp[[1]][9])
split(tmp[[1]], tmp[[1]][9])
tmp[[1]]
split(tmp[[1]], tmp[[1]][9])
split(tmp[[1]], tmp[[1]][9])
split(tmp[[1]], tmp[[1]]$am)
split(tmp[[1]], tmp[[1]]$am)
str(tmp)
tmp[[1]]
split(tmp[[1]], tmp[[1]]$am)
source("C:\\Sources\\StudyR\\처음.R")
cafe <- list (espresso = c(4, 5, 3, 6, 5, 4, 7),
cafe
cafe <- list (espresso = c(4, 5, 3, 6, 5, 4, 7),
cafe
cafe
cafe <- list (espresso = c(4, 5, 3, 6, 5, 4, 7),
americano = c(63, 68, 64, 68, 72, 89, 94),
latte = c(61, 70, 59, 71, 71, 92, 88),
price = c(2.0, 2.5, 3.0),
menu = c('espresso', 'americno', latte'))
menu = c('espresso', 'americno', 'latte'))
cafe <- list (espresso = c(4, 5, 3, 6, 5, 4, 7),
cafe <- list (espresso = c(4, 5, 3, 6, 5, 4, 7),
americano = c(63, 68, 64, 68, 72, 89, 94),
latte = c(61, 70, 59, 71, 71, 92, 88),
price = c(2.0, 2.5, 3.0),
menu = c('espresso', 'americno', 'latte'))
cafe
cafe <- list (espresso = c(4, 5, 3, 6, 5, 4, 7))
cafe
cafe <- list (espresso = c(4, 5, 3, 6, 5, 4, 7))
cafe
cafe <- list (espresso = c(4, 5, 3, 6, 5, 4, 7)),
americano = c(63, 68, 64, 68, 72, 89, 94)
cafe
cafe <- list (espresso = c(4, 5, 3, 6, 5, 4, 7),
americano = c(63, 68, 64, 68, 72, 89, 94)
americano = c(63, 68, 64, 68, 72, 89, 94))
cafe <- list (espresso = c(4, 5, 3, 6, 5, 4, 7),
americano = c(63, 68, 64, 68, 72, 89, 94))
cafe
latte = c(61, 70, 59, 71, 71, 92, 88))
americano = c(63, 68, 64, 68, 72, 89, 94),
cafe <- list (espresso = c(4, 5, 3, 6, 5, 4, 7),
americano = c(63, 68, 64, 68, 72, 89, 94),
latte = c(61, 70, 59, 71, 71, 92, 88))
cafe
price = c(2.0, 2.5, 3.0))
cafe <- list (espresso = c(4, 5, 3, 6, 5, 4, 7),
americano = c(63, 68, 64, 68, 72, 89, 94),
latte = c(61, 70, 59, 71, 71, 92, 88),
price = c(2.0, 2.5, 3.0))
cafe
cafe <- list (espresso = c(4, 5, 3, 6, 5, 4, 7),
americano = c(63, 68, 64, 68, 72, 89, 94),
latte = c(61, 70, 59, 71, 71, 92, 88),
price = c(2.0, 2.5, 3.0),
menu = c('espresso', 'americno', 'latte'))
cafe
cafe
str(cafe)
#cafe[[5]] 이런식으로 작업해도 됨
cafe = list(espresso, americano, latte, price, menu)
#인덱스열과 네임즈행 구분 잘 해야함
cafe
str(cafe)
#cafe[[5]] 이런식으로 작업해도 됨
cafe = list(espresso, americano, latte, price, menu)
str(cafe)
cafe$menu=factor(cafe$menu)
str(cafe)
cafe$price
names(cafe$price)= =cafe$menu
cafe$price
cafe
str(cafe)
cafe$menu=factor(cafe$menu)
str(cafe)
cafe$price
names(cafe$price)= =cafe$menu
cafe$price
names(cafe$price)=cafe$menu
cafe$price
names(cafe$price)
cafe$price
str(cafe)
cafe$price
cafe$price
cafe$price
names(cafe$price)=cafe$menu
cafe
cafe
cafe
cafe
cafe
str(cafe)
cafe$menu=factor(cafe$menu)
str(cafe)
cafe$price
str(cafe)
cafe$price
names(cafe$price)=cafe$menu
cafe$price
names(cafe$price)
str(cafe)
str(cafe$price)
cafe$price[1]
q()
split(tmp[[1]], tmp[[1]]$am)
iris[,c(1:2)]
iris
iris[,c(1:2)] #1~2열의 모든 데이터
iris[
iris[,c(1,3,5)] #1, 3, 5,열의 모든 데이터
iris[,c(1:2)] #1~2열의 모든 데이터
iris[,c(1,3,5)] #1, 3, 5,열의 모든 데이터
iris[,c(1,3,5)] #1, 3, 5,열의 모든 데이터
iris[,c(1:2)] #1~2열의 모든 데이터
iris[,c(1,3,5)] #1, 3, 5,열의 모든 데이터
iris[,c("Spal.Length",'Species")] #1, 5열의 모든 데이터
iris[1:5,] #1~5행의 모든 데이터
iris[1:5,c(1,3)] #1~5행의 데이터 중 1, 3열의 데이터
iris[,c(1,3,5)] #1, 3, 5,열의 모든 데이터
iris[,c("Spal.Length",'Species")] #1, 5열의 모든 데이터
iris[,c("Spal.Length","Species")] #1, 5열의 모든 데이터
iris
iris[,c(1:2)] #1~2열의 모든 데이터
iris[,c(1,3,5)] #1, 3, 5,열의 모든 데이터
iris[,c("Spal.Length","Species")] #1, 5열의 모든 데이터
iris[,c("Sepal.Length","Species")] #1, 5열의 모든 데이터
iris[1:5,] #1~5행의 모든 데이터
iris[1:5,c(1,3)] #1~5행의 데이터 중 1, 3열의 데이터
iris[1:5,c(1,3)] #1~5행의 데이터 중 1, 3열의 데이터
iris[1:5,c(1,3)] #1~5행의 데이터 중 1, 3열의 데이터
str(iris)
dir()
df=read.csv("부산광역시_현대미술관 관람객 수_20201231.csv") #데이터 읽어오기
str(df) #구조확인(타입, 행, 열의 갯수
df
str(df) #구조확인(타입, 행, 열의 갯수
head(df,10) #데이터 샘플 확인(내용 확인)
summary(df)#데이터의 기본 기술 통계
summary(as.factor(df[,1] )#빈도수계산 df[,1]: 연도수
df=read.csv("부산광역시_현대미술관 관람객 수_20201231.csv") #데이터 읽어오기
df #확인
str(df) #구조확인(타입, 행, 열의 갯수
df=read.csv("부산광역시_현대미술관 관람객 수_20201231.csv") #데이터 읽어오기
df #확인
str(df) #구조확인(타입, 행, 열의 갯수
name(df) #필드값만 확인
df #확인
str(df) #구조확인(타입, 행, 열의 갯수
head(df,10) #데이터 샘플 확인(내용 확인)
name(df) #필드값만 확인
names(df) #필드값만 확인
head(df,10) #데이터 샘플 확인(내용 확인)
head(df,10) #데이터 샘플 확인(내용 확인), 10roaks
names(df) #필드값만 확인
#df$names(df)[1]로 볼 수도있음
summary(df)#데이터의 기본 기술 통계
summary(df)#데이터의 기본 기술 통계
str(df) #구조확인(타입, 행, 열의 갯수
str(df)
df$연도
df[,1]
max(df[,1])
str(df)
df[,c(1,3)
df[,c(1,3)
df[,c(1,3)]
df$[,c('연도','관람객수)]
df$[,c('연도','관람객수)]
df$[,c("연도",'관람객수')]
df$[,c("연도","관람객수")]
df[,c("연도","관람객수")]
df[,c('연도,"관람객수")]
df[,c('연도,"관람객수")]
df[,c('연도',"관람객수")]
df[,c('연도','관람객수')]
df[,c('연도','관람객수')]
df[,c(1,3)]
df[,c('연도','관람객수')]
df[1:3,c[1,3)]
df[1:3,c[1,3)]
df[1:3,c(1,3)]
df[1:0,c(1,3)]
str(df)
df[1:36,c(1,3)]
df[,c('연도','관람객수')]
df[1:36,c(1,3)]
df[,c(1,3)]
df[,c('연도','관람객수')]
df[1:36,c(1,3)]
df[1:2]
df[1:12]
df[1:12]
df[1:12,]
df[12:1,]
df[-1:-12,]
df[,c("월", "관람객수")
df[,c("월", "관람객수")
df[,c("월", "관람객수")]
table(is,na(df[3])))
table(is,na(df[3])))
table(is,na(df[3]))
table(is.na(df[3]))
plot(table(is.na(df[3])))
barplot(table(is.na(df[3])))
summary(df)
per(nfrow(3, 1)
barplot(table(is.na(df[1])))
barplot(table(is.na(df[2])))
barplot(table(is.na(df[3])))
#nafow 활용
per(nfrow(3, 1)
barplot(table(is.na(df[1])))
barplot(table(is.na(df[2])))
barplot(table(is.na(df[3])))
per(nfrow(3, 1))
barplot(table(is.na(df[1])))
barplot(table(is.na(df[2])))
barplot(table(is.na(df[3])))
per(nfrow(3, 1))
per(nfrow=c(3, 1))
barplot(table(is.na(df[1])))
barplot(table(is.na(df[2])))
barplot(table(is.na(df[3])))
per(nfrow=c(3, 1))
per(nfrow = c(3. 1))
barplot(table(is.na(df[1])))
barplot(table(is.na(df[2])))
barplot(table(is.na(df[3])))
per(mfrow = c(3, 1))
barplot(table(is.na(df[1])))
barplot(table(is.na(df[2])))
barplot(table(is.na(df[3])))
per(mfrow = c(3, 1))
barplot(table(is.na(df[1])))
barplot(table(is.na(df[2])))
barplot(table(is.na(df[3])))
par(mfrow = c(3, 1))
barplot(table(is.na(df[1])))
barplot(table(is.na(df[2])))
barplot(table(is.na(df[3])))
barplot(table(is.na(df[1])),main=names(df)[index])
index=1
barplot(table(is.na(df[1])),main=names(df)[index])
barplot(table(is.na(df[2])))
barplot(table(is.na(df[3])))
barplot(table(is.na(df[1])),main=names(df)[index])
barplot(table(is.na(df[2])),main=names(df)[index])
barplot(table(is.na(df[index]),main=names(df)[index])
barplot(table(is.na(df[index])),main=names(df)[index])
barplot(table(is.na(df[inded])),main=names(df)[index])
index =1
barplot(table(is.na(df[index]),main=names(df)[index])
barplot(table(is.na(df[index])),main=names(df)[index])
barplot(table(is.na(df[inded])),main=names(df)[index])
barplot(table(is.na(df[index])),main=names(df)[index])
barplot(table(is.na(df[index])),main=names(df)[index])
barplot(table(is.na(df[inded])),main=names(df)[index])
index =1
barplot(table(is.na(df[index])),main=names(df)[index])
barplot(table(is.na(df[index])),main=names(df)[index])
barplot(table(is.na(df[inded])),main=names(df)[index])
index =1
barplot(table(is.na(df[index])),main=names(df)[index])
barplot(table(is.na(df[index])),main=names(df)[index])
barplot(table(is.na(df[inded])),main=names(df)[index])
barplot(table(is.na(df[1])),main=names(df)[index])
barplot(table(is.na(df[index])),main=names(df)[index])
barplot(table(is.na(df[index])),main=names(df)[index])
barplot(table(is.na(df[inded])),main=names(df)[index])
barplot(table(is.na(df[index])),main=names(df)[index])
barplot(table(is.na(df[2])),main=names(df)[index])
barplot(table(is.na(df[1])),main=names(df)[index])
barplot(table(is.na(df[2])),main=names(df)[index])
barplot(table(is.na(df[3])),main=names(df)[index])
barplot(table(is.na(df[1])),main=names(df)[index])
barplot(table(is.na(df[2])),main=names(df)[index])
barplot(table(is.na(df[3])),main=names(df)[index])
index =1
barplot(table(is.na(df[1])),main=names(df)[index])
barplot(table(is.na(df[2])),main=names(df)[index])
barplot(table(is.na(df[3])),main=names(df)[index])
barplot(table(is.na(df[1])),main=names(df)[index])
barplot(table(is.na(df[2])),main=names(df)[index])
barplot(table(is.na(df[3])),main=names(df)[index])
index =1
barplot(table(is.na(df[1])),main=names(df)[index])
barplot(table(is.na(df[2])),main=names(df)[index])
barplot(table(is.na(df[3])),main=names(df)[index])
barplot(table(is.na(df[3])),main=names(df)[index])
barplot(table(is.na(df[2])),main=names(df)[index])
barplot(table(is.na(df[1])),main=names(df)[index])
barplot(table(is.na(df[2])),main=names(df)[index])
barplot(table(is.na(df[3])),main=names(df)[index])
barplot(table(is.na(df[1])),main=names(df)[index])
barplot(table(is.na(df[2])),main=names(df)[index])
barplot(table(is.na(df[3])),main=names(df)[index])
barplot(table(is.na(df[1])),main=names(df)[index])
barplot(table(is.na(df[2])),main=names(df)[index])
barplot(table(is.na(df[3])),main=names(df)[index])
barplot(table(is.na(df[3])),main=names(df)[index])
index =1
barplot(table(is.na(df[1])),main=names(df)[index])
barplot(table(is.na(df[2])),main=names(df)[index])
index =1
barplot(table(is.na(df[1])),main=names(df)[index])
index =1
barplot(table(is.na(df[1])),main=names(df)[index])
barplot(table(is.na(df[2])),main=names(df)[index])
barplot(table(is.na(df[3])),main=names(df)[index])
index =1
barplot(table(is.na(df[1])),main=names(df)[index])
barplot(table(is.na(df[2])),main=names(df)[index])
barplot(table(is.na(df[3])),main=names(df)[index])
barplot(table(is.na(df[3])),main=names(df)[index])
barplot(table(is.na(df[2])),main=names(df)[index])
barplot(table(is.na(df[1])),main=names(df)[index])
barplot(table(is.na(df[1])),main=names(df)[index])
barplot(table(is.na(df[2])),main=names(df)[index])
barplot(table(is.na(df[3])),main=names(df)[index])
index =1
barplot(table(is.na(df[index])),main=names(df)[index])
barplot(table(is.na(df[index])),main=names(df)[index])
barplot(table(is.na(df[inded])),main=names(df)[index])
barplot(table(is.na(df[inded])),main=names(df)[index])
index =1
barplot(table(is.na(df[index])),main=names(df)[index])
barplot(table(is.na(df[index])),main=names(df)[index])
par(mfrow = c(3, 1))
index =1
barplot(table(is.na(df[index])),main=names(df)[index])
barplot(table(is.na(df[index])),main=names(df)[index])
barplot(table(is.na(df[inded])),main=names(df)[index])
par(mfrow = c(3, 1))
index =1
barplot(table(is.na(df[1])),main=names(df)[index])
barplot(table(is.na(df[2])),main=names(df)[index])
barplot(table(is.na(df[3])),main=names(df)[index])
ar(mfrow = c(3, 1))
#barplot(table(is.na(df[1]))
#barplot(table(is.na(df[2])))
#barplot(table(is.na(df[3])))
#타이틀 입력
index =1
barplot(table(is.na(df[1])),main=names(df)[index])
barplot(table(is.na(df[2])),main=names(df)[index])
barplot(table(is.na(df[3])),main=names(df)[index])
q()
